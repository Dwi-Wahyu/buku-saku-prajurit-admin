generator client {
  provider = "prisma-client-js"
  output   = "../src/app/generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Garjas {
  id Int @id @default(autoincrement())

  tanggal DateTime @default(now())

  lari    Int   @map("lari")
  garjasA Float @map("garjas_a")

  pullup     Int?
  shuttleRun Float  @map("shuttle_run")
  renang     Int?
  situp      Int?
  pushup     Int?
  pangkat    String

  skorB1  Float @map("skor_b1")
  skorB2  Float @map("skor_b2")
  skorB3  Float @map("skor_b3")
  skorB4  Float @map("skor_b4")
  garjasB Float @map("garjas_b")

  nilaiAkhir Float @map("nilai_akhir")

  penilaiId String @map("penilai_id")
  penilai   User   @relation(name: "PenilaiToGarjas", fields: [penilaiId], references: [id])

  prajuritId String @map("prajurit_id")
  prajurit   User   @relation(name: "PrajuritToGarjas", fields: [prajuritId], references: [id])

  @@map("garjas")
}

model User {
  id        String    @id @default(uuid())
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  name      String
  username  String    @unique
  password  String
  avatar    String?
  lastLogin DateTime? @map("last_login")
  role      Role

  profile Profile?

  penilaianGarjasDibuat     Garjas[] @relation(name: "PenilaiToGarjas", map: "penilaian_garjas_dibuat")
  penilaianGarjasDidapatkan Garjas[] @relation(name: "PrajuritToGarjas", map: "penilaian_garjas_didapatkan")

  kesatuanId String?
  kesatuan   Kesatuan? @relation(fields: [kesatuanId], references: [id])

  RefreshToken RefreshToken[] @relation(map: "refresh_token")

  @@map("user")
}

model Kesatuan {
  id        String   @id @default(uuid())
  nama      String   @unique
  motto     String?
  logo      String?
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  users     User[]

  @@map("kesatuan")
}

model Profile {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  umur         Int
  jenisKelamin String @map("jenis_kelamin")
  golongan     Int
  userId       String @unique @map("user_id")
  user         User   @relation(fields: [userId], references: [id])

  pangkat     String
  beratBadan  Int?   @map("berat_badan")
  tinggiBadan Int?   @map("tinggi_badan")

  @@map("profile")
}

model RefreshToken {
  id        String   @id @default(uuid())
  token     String   @db.Text()
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  expiresAt DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  revoked   Boolean  @default(false)

  @@unique([token(length: 191)])
  @@index([userId])
  @@map("refresh_token")
}

model Berita {
  id        String    @id @default(uuid())
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  judul     String
  deskripsi String?

  thumbnail String

  penulis String
  content String @db.LongText

  like    Int @default(0)
  dislike Int @default(0)

  @@map("berita")
}

model MediaBerita {
  id        String    @id @default(uuid())
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  urlMedia   String @map("url_media")
  keterangan String

  @@map("media_berita")
}

enum Role {
  superadmin
  admin
  penilai
  prajurit
}
